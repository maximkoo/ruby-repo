require 'net/ftp'
class FTPConn < Net::FTP
	def initialize
		@ftpc=Net::FTP.new('xxx.xxx.xxx.xxx') #IP-адрес
		@ftpc.login('username','password')
	end
	def ftpConn
		@ftpc
	end
	def closeFtpConn
		@ftpc.close
	end
end

class CopyFTP
def initialize(pftp, pfrom, pto)
	@s1,@s2=pfrom,pto
	@ftp=pftp
end

def copyFolder
	@fi=@ftp.nlst()
	if @fi.index(File.basename(@s2))
		puts 'FTP: trying to enter directory '+@s2
		fff=@ftp.chdir(File.basename(@s2))
		puts 'Directory '+@s2+ ' exists.'
	else
		@ftp.mkdir(File.basename(@s2))
		puts 'Directory '+@s2+ ' created.'
		@ftp.chdir(File.basename(@s2))
	end

	@fi=@ftp.nlst()
	#puts @fi
	Dir.glob(@s1+'/*') do |x|
		if File.file?(x)
			print 'Copy file '+File.basename(x)+'...'
			if not @fi.index(File.basename(x))
				@ftp.putbinaryfile(x)
				puts 'copied'
			else
				puts 'already exists!'
			end
		else
			puts 'Entering directory '+x
			z=CopyFTP.new(@ftp, @s1+'/'+File.basename(x), @s2+'/'+File.basename(x))
			z.copyFolder
		end
	end
	@ftp.chdir('..')
	end
end